#pragma config(Sensor, S1,     lenght,         sensorEV3_Ultrasonic)
#pragma config(Sensor, S4,     color,          sensorEV3_Color)
#pragma config(Motor,  motorA,          left,          tmotorEV3_Large, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motorB,          save,          tmotorEV3_Medium, PIDControl, encoder)
#pragma config(Motor,  motorD,          right,         tmotorEV3_Large, PIDControl, driveRight, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


//zacyklit tak aby dokud nebude hodnota tak se nejede čára a víc spát
int cerna=100;
int bila=0;
int cervena = 85;
task Mereni(){
      while(true){
            if(cerna>SensorValue[color])
                  cerna=SensorValue[color];
                  if(cerna<SensorValue[color])
                  cerna=SensorValue[color];

                                    cervena=SensorValue[color];
      }

}
void CaraPid(int idealniHodnota){
      int v=5;
      float index=0.1;
      int namerenaHodnota=SensorValue[color];
      int rozdilHodnot=namerenaHodnota-idealniHodnota;

      motor[left]=v+index*rozdilHodnot;
      motor[right]=v-index*rozdilHodnot;
}

void destinace()
{
            CaraPid(35);
}
bool zavreno = false;
void cestaKRajcatum(){



//zavírání nákladního prostoru
while(SensorValue[color]<98)
{
      if(!zavreno){
                  CaraPid(82);
      }
      if(SensorValue[lenght]==255 && !zavreno)
{
motor[motorB] =-50;
wait10Msec(10);
motor[motorB] =0;
zavreno = true;
}
if(zavreno){
      wait10Msec(10);
                        motor[left]=-50;
      motor[right]=-50;
      wait10Msec(60);
                              motor[left]=0;
      motor[right]=0;
      wait10Msec(10);
      motor[motorB] =50;
                                    motor[left]=0;
      motor[right]=0;
wait10Msec(50);
motor[motorB] =0;
zavreno = false;

                              motor[left]=-100;
      motor[right]=100;
      wait10Msec(89);
                              motor[left]=0;
      motor[right]=0;

}
}
}

task main()
{
      while(true)
{
      startTask(Mereni);

cestaKRajcatum();
}




stopAllTasks();

}
