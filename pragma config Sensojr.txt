#pragma config(Sensor, S1,     u,              sensorEV3_Ultrasonic)
#pragma config(Sensor, S3,     barvicky,       sensorColorNxtFULL)
#pragma config(Sensor, S4,     c,              sensorEV3_Color)
#pragma config(Motor,  motorA,          Sanna,         tmotorEV3_Large, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motorD,          Kalousek,      tmotorEV3_Large, PIDControl, driveRight, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

int minLight=100;


task Mereni(){
      while(true){
            if(minLight>SensorValue[c])
                  minLight=SensorValue[c];
      }
}

void CaraPid(){
      int idealniHodnota=30;
      int v=15;
      float index=0.4;
      int namerenaHodnota=SensorValue[c];
      int rozdilHodnot=namerenaHodnota-idealniHodnota;

      motor[Sanna]=v+index*rozdilHodnot;
      motor[Kalousek]=v-index*rozdilHodnot;
}



task main()
{

startTask(Mereni);
while(true)
{
      CaraPid();
}
}
